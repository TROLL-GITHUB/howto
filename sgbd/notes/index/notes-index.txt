# Définition
Structure de données qui reprend la liste ordonnée des valeurs auxquelles il se rapporte.
Lorsque vous créez un index sur une table, MySQL stocke cet index sous forme d'une structure particulière, 
contenant les valeurs des colonnes impliquées dans l'index. 
Cette structure stocke les valeurs triées et permet d'accéder à chacune de manière efficace et rapide.

Mais pourquoi ne pas simplement trier la table complète sur la base de la colonne id ?
Pourquoi créer et stocker une structure spécialement pour l'index ? 
Parce qu'il peut y avoir plusieurs index sur une même table, et que l'ordre des lignes, 
pour chacun de ces index, n'est pas nécessairement le même

# Intérêt des index
1- Accélérer les requêtes qui utilisent des colonnes indexées comme critères de recherche. 
2- Assurer l'intégrité des données de la base ; cela signifie garantir la qualité de vos données. 
Pour cela, il existe plusieurs types d'index différents, et deux types de "clés".

# Désavantages
1- Ils prennent de la place en mémoire.
2- Ils ralentissent les requêtes d'insertion, modification et suppression, 
puisqu'à chaque fois, il faut remettre l'index à jour en plus de la table.

# Index sur plusieurs colonnes
On parle d'index "par la gauche". Si on prend des sous-parties d'index existant en prenant des colonnes "par la gauche", 
ces index existent. Mais si l'on commence par la droite ou que l'on "saute" une colonne, 
ils n'existent pas et doivent éventuellement être créés.

# Index sur les colonnes AlphNumerique
Sur ce type de colonne, il est préférable de placer un index partiel, c'est à dir sur les 25-30 premiers caractères.
"Indexe cette colonne, mais base-toi seulement sur les x premiers caractères. Le fait d'utiliser ces index partiels 
sur des champs alphanumériques permet de gagner de la place (un index sur 150 lettres prend évidemment plus de place
qu'un index sur 20 lettres), et si la longueur est intelligemment définie, l'accélération permise par l'index sera 
la même que si l'on avait pris la colonne entière.

# Index BLOB et TEXT
Si vous mettez un index sur une colonne de type BLOB  ou TEXT  (ou un de leurs dérivés), 
MySQL exige que vous précisiez un nombre de caractères à prendre en compte. Et heureusement… vu la longueur potentielle 
de ce que l'on stocke dans de telles colonnes.

# Index unique
Avoir un index UNIQUE  sur une colonne (ou plusieurs) permet de s'assurer que jamais vous n’insérerez deux fois la même 
valeur (ou combinaison de valeurs) dans la table.
Lorsque vous mettez un index UNIQUE  sur une table, vous ne mettez pas seulement un index, vous ajoutez surtout une contrainte.

# Indes FullText
Un index FULLTEXT  est utilisé pour faire des recherches de manière puissante et rapide sur un texte. 
On n'utilise donc ce type d'index que sur les colonnes de type CHAR, VARCHAR  ou TEXT.

# Ajout des index après création de la table
En dehors du fait que parfois vous ne penserez pas à tout au moment de la création de votre table, 
il peut parfois être intéressant de créer les index après la table.
En effet, je vous ai dit que l'ajout d'index sur une table ralentissait l'exécution des requêtes d'écriture 
(insertion, suppression, modification de données). Par conséquent, si vous créez une table que vous comptez remplir avec un grand
nombre de données immédiatement, grâce à la commande LOAD DATA INFILE, par exemple, il vaut bien mieux créer la table, la remplir,
et ensuite seulement créer les index voulus sur cette table.
Il existe deux commandes permettant de créer des index sur une table existante : 
ALTER TABLE
CREATE INDEX.
Ces deux commandes sont équivalentes, 

# Rercherche FullText
Les recherches via  FULLTEXT  fonctionnent plutôt pas mal, mais si vous avez énormément de données, si vous faites énormément de
requêtes de recherche, ou des recherches très complexes, n'hésitez pas à vous tourner vers un outil spécialisé, un vrai moteur de
recherche comme SolR, Sphinx ou ElasticSearch.
Un index FULLTEXT  ne peut être défini que sur une colonne de type CHAR, VARCHAR  ou TEXT.
Les index "par la gauche" ne sont pas pris en compte par les index FULLTEXT
